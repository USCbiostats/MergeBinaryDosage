// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// GetSNP
Rcpp::DataFrame GetSNP(const std::string& filename, const std::string& snpName, const std::string& chromosome, unsigned int location, const std::string& refAllele, const std::string& altAllele);
RcppExport SEXP _MergeBinaryDosage_GetSNP(SEXP filenameSEXP, SEXP snpNameSEXP, SEXP chromosomeSEXP, SEXP locationSEXP, SEXP refAlleleSEXP, SEXP altAlleleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type snpName(snpNameSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type chromosome(chromosomeSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type location(locationSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type refAllele(refAlleleSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type altAllele(altAlleleSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSNP(filename, snpName, chromosome, location, refAllele, altAllele));
    return rcpp_result_gen;
END_RCPP
}
// ReadCreatedFile
void ReadCreatedFile(const std::string& filename);
RcppExport SEXP _MergeBinaryDosage_ReadCreatedFile(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    ReadCreatedFile(filename);
    return R_NilValue;
END_RCPP
}
// ReadInterestingStuff
void ReadInterestingStuff(const std::string& filename);
RcppExport SEXP _MergeBinaryDosage_ReadInterestingStuff(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    ReadInterestingStuff(filename);
    return R_NilValue;
END_RCPP
}
// BinaryDosageMerge
int BinaryDosageMerge(Rcpp::CharacterVector& mergeFiles, Rcpp::String outFilename);
RcppExport SEXP _MergeBinaryDosage_BinaryDosageMerge(SEXP mergeFilesSEXP, SEXP outFilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector& >::type mergeFiles(mergeFilesSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type outFilename(outFilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(BinaryDosageMerge(mergeFiles, outFilename));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MergeBinaryDosage_GetSNP", (DL_FUNC) &_MergeBinaryDosage_GetSNP, 6},
    {"_MergeBinaryDosage_ReadCreatedFile", (DL_FUNC) &_MergeBinaryDosage_ReadCreatedFile, 1},
    {"_MergeBinaryDosage_ReadInterestingStuff", (DL_FUNC) &_MergeBinaryDosage_ReadInterestingStuff, 1},
    {"_MergeBinaryDosage_BinaryDosageMerge", (DL_FUNC) &_MergeBinaryDosage_BinaryDosageMerge, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_MergeBinaryDosage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
